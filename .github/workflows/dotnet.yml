# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: 
      - main
      - develop
      - feature/**
    tags:        
      - v*
      - alpha*
      - beta*
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  ENV_NAME: "FixENV"

jobs:
  log:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: isMain
      if: ${{ github.ref == 'refs/heads/main' }}
      run: echo "This is a main!"
    - name: github.ref
      run: echo "${{ github.ref }}"
    - name: github.ref.name
      run: echo "${{ github.ref_name }}"
    - name: secrets.PASSWORD
      run: echo "${{ secrets.PASSWORD }}"
    - name: vars.URL
      run: echo "${{ vars.URL }}"
    - name: github.ref_name == main
      if: ${{ github.ref_name == 'main' }}
      run: echo "$ENV_NAME"

  build:
    runs-on: dev
    steps:
    - uses: actions/checkout@v3
    - name: Restore dependencies
      run: dotnet restore WebApplicationPipeline
    - name: Build
      run: dotnet build WebApplicationPipeline --no-restore
    - name: Test
      run: dotnet test WebApplicationPipeline --no-build --verbosity normal
    - name: Publish
      run: dotnet publish WebApplicationPipeline/WebApplicationPipeline.csproj -c Release -o website
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: WebSite
        path: website
        retention-days: 10

  code-scand:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: task
      run: echo "dont"

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: task
      run: echo "dont"

  unit-test:
    runs-on: ubuntu-latest
    needs: [build,code-scand,security-scan]
    steps:
    - uses: actions/checkout@v3
    - name: task
      run: echo "dont"

  deploy-alpha:
    runs-on: iis
    if: ${{ startsWith( github.ref, 'refs/tags/alpha' ) }}
    needs: build
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.1.1
      with:
        name: WebSite
    - name: Stop IIS
      run: 'C:\Windows\System32\inetsrv\appcmd stop apppool /apppool.name:"Demo"'
    - name: Deploy
      run: xcopy /e /v /a /y *.* C:\inetpub\www\ThaiId
    - name: Start IIS
      run: 'C:\Windows\System32\inetsrv\appcmd start apppool /apppool.name:"Demo"'

  deploy-staging:
    runs-on: ubuntu-latest
    if: ${{ startsWith( github.ref, 'refs/tags/beta' ) }}
    needs: build
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.1.1
      with:
        name: WebSite
    - name: Stop IIS
      run: 'C:\Windows\System32\inetsrv\appcmd stop apppool /apppool.name:"Demo"'
    - name: Deploy
      run: xcopy /e /v /a /y *.* C:\inetpub\www\ThaiId
    - name: Start IIS
      run: 'C:\Windows\System32\inetsrv\appcmd start apppool /apppool.name:"Demo"'

  deploy-prod:
    runs-on: ubuntu-latest
    if: ${{ startsWith( github.ref, 'refs/tags/v' ) }}
    needs: build
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.1.1
      with:
        name: WebSite
    - name: Stop IIS
      run: 'C:\Windows\System32\inetsrv\appcmd stop apppool /apppool.name:"Demo"'
    - name: Deploy
      run: xcopy /e /v /a /y *.* C:\inetpub\www\ThaiId
    - name: Start IIS
      run: 'C:\Windows\System32\inetsrv\appcmd start apppool /apppool.name:"Demo"'

  sanity-alpha:
    runs-on: ubuntu-latest
    needs: [deploy-alpha]
    steps:
    - uses: actions/checkout@v3
    - name: task
      run: echo "dont"

  sanity-staging:
    runs-on: ubuntu-latest
    needs: [deploy-staging]
    steps:
    - uses: actions/checkout@v3
    - name: task
      run: echo "dont"

  sanity-prod:
    runs-on: ubuntu-latest
    needs: [deploy-prod]
    steps:
    - uses: actions/checkout@v3
    - name: task
      run: echo "dont"
